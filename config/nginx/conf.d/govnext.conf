# GovNext Virtual Host Configuration

# HTTP Server - Redirect to HTTPS
server {
    listen 80;
    server_name _;
    
    # Health check endpoint
    location /ping {
        access_log off;
        return 200 "pong\n";
        add_header Content-Type text/plain;
    }

    # Security headers for HTTP
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    # Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS Server - Main GovNext Application
server {
    listen 443 ssl http2;
    server_name _;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/govnext.crt;
    ssl_certificate_key /etc/nginx/ssl/govnext.key;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Document root
    root /var/www/html;
    index index.html;

    # Rate limiting
    limit_req zone=general burst=20 nodelay;
    limit_conn conn_limit_per_ip 10;

    # Health check endpoint
    location /ping {
        access_log off;
        return 200 "pong\n";
        add_header Content-Type text/plain;
    }

    # Static assets
    location /assets/ {
        root /var/www/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # Serve pre-compressed files
        location ~* \.(js|css)$ {
            gzip_static on;
            add_header Vary Accept-Encoding;
        }
    }

    # Files and media
    location /files/ {
        root /var/www/html/sites;
        expires 1M;
        add_header Cache-Control "public";
        add_header X-Content-Type-Options nosniff;
        
        # Security for sensitive files
        location ~* \.(py|pyc|pyo|pyx|pyd|html|json|sql)$ {
            deny all;
        }
    }

    # API endpoints with specific rate limiting
    location /api/ {
        limit_req zone=api burst=50 nodelay;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "$http_origin" always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With" always;
        
        if ($request_method = OPTIONS) {
            add_header Access-Control-Max-Age 3600;
            add_header Content-Type text/plain;
            add_header Content-Length 0;
            return 204;
        }

        proxy_pass http://govnext_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Authentication endpoints with stricter rate limiting
    location ~ ^/(api/method/login|api/method/frappe\.auth\.get_logged_user) {
        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://govnext_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
    }

    # WebSocket connections
    location /socket.io/ {
        proxy_pass http://govnext_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific timeouts
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }

    # Block sensitive files
    location ~* \.(py|pyc|pyo|pyx|pyd)$ {
        deny all;
    }

    location ~* /\.git {
        deny all;
    }

    location ~* /\.env {
        deny all;
    }

    location ~* \.(sql|bak|backup|tar|gz|zip)$ {
        deny all;
    }

    # Main application
    location / {
        # Try to serve static files first, then proxy to app
        try_files $uri @proxy_to_app;
    }

    location @proxy_to_app {
        proxy_pass http://govnext_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # Handle errors
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }

    # Error pages
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Monitoring endpoint for Prometheus
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 172.22.0.0/24;  # monitoring network
        deny all;
    }
}